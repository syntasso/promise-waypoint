version: 2.1

orbs:
  k8s: circleci/kubernetes@1.3.1
  retry: kimh/run-with-retry@1.0.0

executors:
  machine-medium:
    machine: true
    resource_class: medium
    working_directory: ~/repo
  machine-large:
    machine: true
    resource_class: large
    working_directory: ~/repo

commands:
  install_software:
    steps:
      - k8s/install
      - run:
          name: Install tools and deps
          command: |
            if [ ! -f ~/bin/kind ]; then
              curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-amd64 -o ~/bin/kind
              chmod +x ~/bin/kind
            fi

            curl -L https://github.com/syntasso/kratix/releases/download/v0.0.1/worker-resource-builder-v0.0.0-1-linux-amd64 -o ~/bin/worker-resource-builder
            chmod +x ~/bin/worker-resource-builder
      - attach_workspace:
          at: .

jobs:
  test-and-push:
    parameters:
      promise:
        type: string
    executor:
      name: machine-large
    steps:
      - install_software
      - checkout
      - run:
          name: Validate no pending changes
          command: |
            ./internal/scripts/inject-wcr

            if ! git diff --exit-code .; then
              echo ""
              echo "Changes in the WCR were detected"
              echo "Injection of WCR via CI is not supported. Please commit and push them manually."
              exit 1
            fi
      - run:
          name: Install Kratix
          command: |
            ./internal/scripts/setup-kind-with-nodeport
      - run:
          name: Install Promise
          command: |
            kubectl create --filename promise.yaml
            ./internal/scripts/pipeline-image build load
      - retry/run-with-retry:
          command: ./internal/scripts/test promise
          # 5 minutes total retry (3 sec * 100 times = 300 sec)
          sleep: 3
          retry-count: 100
      - run:
          name: Apply resource-request
          command: |
            if test -f "resource-request.yaml"; then
              kubectl apply --filename resource-request.yaml
            fi
      - retry/run-with-retry:
          command: ./internal/scripts/test resource-request
          # 5 minutes total retry (3 sec * 100 times = 300 sec)
          sleep: 3
          retry-count: 100
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
          steps:
            - run:
                name: GHCR Push
                command: |
                  echo "$GITHUB_PACKAGES_TOKEN" | docker login ghcr.io -u syntassodev --password-stdin
                  ./internal/scripts/pipeline-image push
            - run:
                name: Verify package is public
                command: |
                  if test -f "internal/request-pipeline/Dockerfile"; then
                    visibility=$(curl -sL \
                      -H "Accept: application/vnd.github+json"\
                      -H "Authorization: Bearer $GITHUB_PACKAGES_TOKEN" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      "https://api.github.com/orgs/syntasso/packages?package_type=container" |
                    jq -r '.[] | select(.name | contains ("<< parameters.promise >>-request-pipeline")) | .visibility')

                    test "${visibility}" = "public"
                  fi

workflows:
  promises:
    jobs:
      - test-and-push:
          context:
            - github-credentials
          matrix:
            parameters:
              promise:
                - waypoint
