apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: waypoint
  namespace: default
spec:
  api:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: waypoints.marketplace.kratix.io
    spec:
      group: marketplace.kratix.io
      names:
        kind: waypoint
        plural: waypoints
        singular: waypoint
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  username:
                    description: 'Waypoint username that is requesting access. Must
                      match be less than 238 characters, start and end with alphanumeric,
                      and only contain alphanumeric, ''-'', or ''.'' characters. '
                    maxLength: 238
                    pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
                    type: string
                required:
                - username
                type: object
            type: object
        served: true
        storage: true
  dependencies:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: waypoint
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/name: waypoint
      name: waypoint-token-generator
      namespace: waypoint
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: waypoint-token-generator
      namespace: waypoint
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
      - patch
      - get
      - watch
      - list
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app.kubernetes.io/name: waypoint
      name: waypoint-token-generator
      namespace: waypoint
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: waypoint-token-generator
    subjects:
    - kind: ServiceAccount
      name: waypoint-token-generator
      namespace: waypoint
  - apiVersion: batch/v1
    kind: Job
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/name: waypoint
      name: waypoint-init-secret
      namespace: waypoint
    spec:
      activeDeadlineSeconds: 60
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: waypoint
            app.kubernetes.io/name: waypoint
          name: waypoint-init-secret
        spec:
          containers:
          - command:
            - kubectl
            - create
            - secret
            - generic
            - --from-literal=token=
            - waypoint-server-token
            image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
            imagePullPolicy: IfNotPresent
            name: server-token
          - command:
            - kubectl
            - create
            - secret
            - generic
            - --from-literal=token=
            - waypoint-runner-token
            image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
            imagePullPolicy: IfNotPresent
            name: runner-token
          restartPolicy: Never
          serviceAccountName: waypoint-token-generator
      ttlSecondsAfterFinished: 86400
  - apiVersion: batch/v1
    kind: Job
    metadata:
      labels:
        app.kubernetes.io/name: waypoint
      name: waypoint-token-generator
      namespace: waypoint
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/name: waypoint
          name: waypoint-token-generator
        spec:
          containers:
          - command:
            - generate-token
            - --username admin
            - --bootstrap
            image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
            imagePullPolicy: IfNotPresent
            name: token-generator
          restartPolicy: Never
          serviceAccountName: waypoint-token-generator
      ttlSecondsAfterFinished: 86400
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint-bootstrap
      namespace: waypoint
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint-runner-odr
      namespace: waypoint
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint-runner
      namespace: waypoint
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint
      namespace: waypoint
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-runner-odr
      name: waypoint-runner-odr
      namespace: waypoint
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      verbs:
      - get
      - list
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-runner
      name: waypoint-runner-odr-rolebinding-custom
      namespace: waypoint
    roleRef:
      apiGroup: ""
      kind: ClusterRole
      name: waypoint-runner-odr
    subjects:
    - kind: ServiceAccount
      name: waypoint-runner-odr
      namespace: waypoint
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-bootstrap
      name: waypoint-bootstrap
      namespace: waypoint
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - get
      - patch
    - apiGroups:
      - ""
      resources:
      - services
      verbs:
      - get
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-bootstrap
      name: waypoint-bootstrap-rolebinding
      namespace: waypoint
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: waypoint-bootstrap
    subjects:
    - kind: ServiceAccount
      name: waypoint-bootstrap
      namespace: waypoint
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-runner
      name: waypoint-runner-odr-rolebinding-edit
      namespace: waypoint
    roleRef:
      apiGroup: ""
      kind: ClusterRole
      name: edit
    subjects:
    - kind: ServiceAccount
      name: waypoint-runner-odr
      namespace: waypoint
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint-runner
      name: waypoint-runner-rolebinding
      namespace: waypoint
    roleRef:
      apiGroup: ""
      kind: ClusterRole
      name: edit
    subjects:
    - kind: ServiceAccount
      name: waypoint-runner
      namespace: waypoint
  - apiVersion: v1
    kind: Service
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint-server
      namespace: waypoint
    spec:
      clusterIP: None
      ports:
      - name: https
        port: 9702
        targetPort: https
      - name: grpc
        port: 9701
        targetPort: grpc
      selector:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/name: waypoint
        component: server
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: waypoint
        chart: waypoint-0.1.20
        component: ui
        heritage: Helm
        release: waypoint
      name: waypoint-ui
      namespace: waypoint
    spec:
      ports:
      - name: http
        port: 80
        targetPort: http
      - name: https
        nodePort: 30003
        port: 443
        targetPort: https
      - name: grpc
        nodePort: 30001
        port: 9701
        targetPort: grpc
      - name: https-2
        nodePort: 30002
        port: 9702
        targetPort: https
      selector:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/name: waypoint
        component: server
      type: NodePort
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
      name: waypoint-runner
      namespace: waypoint
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: waypoint
          app.kubernetes.io/name: waypoint
          component: runner
      serviceName: waypoint-runner
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: waypoint
            app.kubernetes.io/name: waypoint
            component: runner
            helm.sh/chart: waypoint-0.1.20
        spec:
          containers:
          - args:
            - runner
            - agent
            - -liveness-tcp-addr=:1234
            - -state-dir=/data/runner
            - -vv
            command:
            - waypoint
            env:
            - name: HOME
              value: /home/waypoint
            - name: WAYPOINT_SERVER_ADDR
              value: waypoint-server:9701
            - name: WAYPOINT_SERVER_TLS
              value: "true"
            - name: WAYPOINT_SERVER_TLS_SKIP_VERIFY
              value: "true"
            - name: WAYPOINT_SERVER_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: waypoint-runner-token
            image: docker.io/hashicorp/waypoint:0.11.2
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 10
              initialDelaySeconds: 5
              periodSeconds: 3
              successThreshold: 1
              tcpSocket:
                port: 1234
              timeoutSeconds: 5
            name: waypoint
            resources:
              requests:
                cpu: 250m
                memory: 256Mi
            volumeMounts:
            - mountPath: /home/waypoint
              name: home
            - mountPath: /data
              name: data-waypoint
          initContainers:
          - command:
            - /bin/sh
            - -ec
            - |
              until [ -s "/secret/token" ]; do
                echo "Waiting for runner token secret '/secret/token' to be populated from secret..."
                sleep 2
              done
            image: busybox
            name: wait-for-token
            volumeMounts:
            - mountPath: /secret
              name: token
              readOnly: true
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 100
          serviceAccountName: waypoint-runner
          volumes:
          - emptyDir: {}
            name: home
          - name: token
            secret:
              secretName: waypoint-runner-token
      volumeClaimTemplates:
      - metadata:
          name: data-waypoint
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
      name: waypoint-server
      namespace: waypoint
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: waypoint
          app.kubernetes.io/name: waypoint
          component: server
      serviceName: waypoint-server
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: waypoint
            app.kubernetes.io/name: waypoint
            component: server
            helm.sh/chart: waypoint-0.1.20
        spec:
          containers:
          - args:
            - server
            - run
            - -accept-tos
            - -db=/data/data.db
            - -listen-grpc=0.0.0.0:9701
            - -listen-http=0.0.0.0:9702
            - -listen-http-insecure=0.0.0.0:9703
            - -vv
            command:
            - waypoint
            env:
            - name: HOME
              value: /home/waypoint
            image: docker.io/hashicorp/waypoint:0.11.2
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 2
              initialDelaySeconds: 5
              periodSeconds: 3
              successThreshold: 1
              tcpSocket:
                port: grpc
              timeoutSeconds: 5
            name: waypoint
            ports:
            - containerPort: 9701
              name: grpc
            - containerPort: 9702
              name: https
            - containerPort: 9703
              name: http
            resources:
              requests:
                cpu: 250m
                memory: 256Mi
            volumeMounts:
            - mountPath: /data
              name: data-waypoint
            - mountPath: /home/waypoint
              name: home
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 100
          serviceAccountName: waypoint
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: home
      volumeClaimTemplates:
      - metadata:
          name: data-waypoint
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
  - apiVersion: batch/v1
    kind: Job
    metadata:
      labels:
        app.kubernetes.io/instance: waypoint
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: waypoint
        helm.sh/chart: waypoint-0.1.20
      name: waypoint-bootstrap-0.11.2-ghzk65
      namespace: waypoint
    spec:
      activeDeadlineSeconds: 600
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: waypoint
            app.kubernetes.io/name: waypoint
            component: bootstrap
            helm.sh/chart: waypoint-0.1.20
          name: waypoint-bootstrap
        spec:
          containers:
          - args:
            - k8s
            - bootstrap
            - -vvv
            - -root-token-secret=waypoint-server-token
            - -runner-token-secret=waypoint-runner-token
            - -odr-image=docker.io/hashicorp/waypoint-odr:0.11.2
            - -odr-service-account=waypoint-runner-odr
            - -odr-image-pull-policy=IfNotPresent
            - -advertise-service=waypoint-ui
            - -advertise-tls=true
            - -advertise-tls-skip-verify=true
            command:
            - waypoint
            env:
            - name: HOME
              value: /home/waypoint
            - name: WAYPOINT_SERVER_ADDR
              value: waypoint-server:9701
            - name: WAYPOINT_SERVER_TLS
              value: "true"
            - name: WAYPOINT_SERVER_TLS_SKIP_VERIFY
              value: "true"
            image: docker.io/hashicorp/waypoint:0.11.2
            imagePullPolicy: IfNotPresent
            name: waypoint-bootstrap
            resources: null
            volumeMounts:
            - mountPath: /home
              name: home
          restartPolicy: Never
          securityContext:
            fsGroup: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 100
          serviceAccountName: waypoint-bootstrap
          volumes:
          - emptyDir: {}
            name: home
      ttlSecondsAfterFinished: 300
  workflows:
    resource:
      configure:
      - apiVersion: platform.kratix.io/v1alpha1
        kind: Pipeline
        metadata:
          name: instance-configure
          namespace: default
        spec:
          containers:
          - image: ghcr.io/syntasso/kratix-marketplace/waypoint-configure-pipeline:v0.1.0
            name: waypoint-configure-pipeline
status: {}
