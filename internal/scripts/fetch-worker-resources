#!/usr/bin/env bash

PWD="$( cd $(dirname $0)/.. && pwd)"
resources_path=${PWD}/resources
mkdir -p ${resources_path}

if ! which helm > /dev/null; then
    echo "Helm not found in PATH"
    exit 1
fi
if ! which yq > /dev/null; then
    echo "yq not found in PATH"
    exit 1
fi

helm repo add hashicorp https://helm.releases.hashicorp.com 2>&1 > /dev/null 

cat > ${resources_path}/namespace.yaml <<EOF
---
apiVersion: v1
kind: Namespace
metadata:
  name: waypoint
EOF

cat > ${resources_path}/rbac.yaml <<EOF
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: waypoint-token-generator
  namespace: waypoint
  labels:
    app.kubernetes.io/name: waypoint
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: waypoint-token-generator
  namespace: waypoint
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "patch", "get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: waypoint-token-generator
  namespace: waypoint
  labels:
    app.kubernetes.io/name: waypoint
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: Role
  name: waypoint-token-generator
subjects:
  - kind: ServiceAccount
    name: waypoint-token-generator
    namespace: waypoint
EOF

cat > ${resources_path}/token-generator-job.yaml <<EOF
---
apiVersion: batch/v1
kind: Job
metadata:
  name: waypoint-token-generator
  namespace: waypoint
  labels:
    app.kubernetes.io/name: waypoint
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 600
  ttlSecondsAfterFinished: 86400 # 24h
  template:
    metadata:
      name: waypoint-token-generator
      labels:
        app.kubernetes.io/name: waypoint
    spec:
      serviceAccountName: waypoint-token-generator
      restartPolicy: Never
      containers:
        - name: token-generator
          image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
          imagePullPolicy: IfNotPresent
          command: ["generate-token", "--username admin", "--bootstrap"]
EOF

# Waypoint can not create secrets, only patch. These secrets must therefore
# exist for Waypoint to bootstrap the server and runner. However, because we
# use GitOps, the resources templated by the Helm chart mean we will always
# be overwritting the bootstrapped secret to be empty like defined by the Helm
# chart.
#
# To solve this, we exclude the Secrets from the templated resources (see the
# yq: `select(.kind == \"Secret\" | not)`) and then run a job once (and only once)
# to create these blank secrets for the bootstrap job to fill in.
cat > ${resources_path}/secret-init-job.yaml <<EOF
---
apiVersion: batch/v1
kind: Job
metadata:
  name: waypoint-init-secret
  namespace: waypoint
  labels:
    app.kubernetes.io/name: waypoint
    app.kubernetes.io/instance: waypoint
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 60
  ttlSecondsAfterFinished: 86400 # 24 hours
  template:
    metadata:
      name: waypoint-init-secret
      labels:
        app.kubernetes.io/name: waypoint
        app.kubernetes.io/instance: waypoint
    spec:
      serviceAccountName: waypoint-token-generator
      restartPolicy: Never
      containers:
        - name: server-token
          image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
          imagePullPolicy: IfNotPresent
          command:
          - "kubectl"
          - "create"
          - "secret"
          - "generic"
          - "--from-literal=token="
          - "waypoint-server-token"
        - name: runner-token
          image: ghcr.io/syntasso/kratix-marketplace/waypoint-token-generator:v1
          imagePullPolicy: IfNotPresent
          command:
          - "kubectl"
          - "create"
          - "secret"
          - "generic"
          - "--from-literal=token="
          - "waypoint-runner-token"
EOF

# Note: Can remove use of Url Service by adding helm argument `--set server.runArgs={-url-enabled=false}`
helm template waypoint hashicorp/waypoint \
    --namespace waypoint | \
    yq eval "select(.kind == \"Secret\" | not) |
             select(.metadata | has(\"namespace\") | not) |= .metadata.namespace = \"waypoint\"" > ${resources_path}/waypoint-server.yaml
