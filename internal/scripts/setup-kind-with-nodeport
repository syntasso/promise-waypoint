#!/usr/bin/env bash

PWD="$( cd $(dirname $0)/.. && pwd)"

source ${PWD}/scripts/update-promise-with-nodeport

kind delete cluster --name platform

cat <<EOF | kind create cluster --name platform --config -
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
    extraPortMappings:
      # These ports are for local testing of GitOps repos (MinIO and Gitea)
      - containerPort: 31337
        hostPort: 31337
      - containerPort: 31333
        hostPort: 31333
      # These allow localhost ports to be open for the specfied NodePort service
      # on every cluster creation. While these services are not always running,
      # they are commonly used and accessed.
      - containerPort: 30001
        hostPort: 30001
      - containerPort: 30002
        hostPort: 30002
      - containerPort: 30003
        hostPort: 30003
EOF

images=(
    minio/minio:RELEASE.2022-06-30T20-58-09Z
    gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
    $(curl https://raw.githubusercontent.com/syntasso/kratix/main/distribution/single-cluster/install-all-in-one.yaml | grep "image: syntasso/kratix-platform:" | awk '{print $2}')
)

for image in "${images[@]}"; do
    docker pull $image
    kind load docker-image --name platform $image
done

kubectl apply --filename https://raw.githubusercontent.com/syntasso/kratix/main/distribution/single-cluster/install-all-in-one.yaml
kubectl apply --filename https://raw.githubusercontent.com/syntasso/kratix/main/distribution/single-cluster/config-all-in-one.yaml

while ! kubectl get namespace kratix-worker-system --context kind-platform >/dev/null 2>&1; do
    echo -n "."
    sleep 2
done

echo "Kratix is installed"
